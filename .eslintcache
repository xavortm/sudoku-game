[{"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/index.js":"1","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/App.js":"2","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/reportWebVitals.js":"3","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/Components/Board/Board.js":"4","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/components/Board/Board.js":"5","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/utilities/boardUtils.js":"6","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/components/Board/Cell.js":"7"},{"size":500,"mtime":1608978946335,"results":"8","hashOfConfig":"9"},{"size":177,"mtime":1610201871798,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608978946338,"results":"11","hashOfConfig":"9"},{"size":1346,"mtime":1608987537707,"results":"12","hashOfConfig":"9"},{"size":1333,"mtime":1612733319127,"results":"13","hashOfConfig":"9"},{"size":401,"mtime":1612732294043,"results":"14","hashOfConfig":"9"},{"size":1096,"mtime":1612733264861,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kj3n0a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/index.js",[],["32","33"],"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/App.js",[],"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/reportWebVitals.js",[],"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/Components/Board/Board.js",["34","35"],"import React, { useState, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Board.scss\";\n\n/**\n * A simple function to geneerate the array containing the size.\n * @param {Number} size A positive number that defines the board size\n */\nconst generateEmptyBoard = (size = 9) => {\n  let boardArrayRow = [];\n  let boardArrayColumns = [];\n\n  for (let x = 0; x < size; x++) {\n    boardArrayColumns.push(0);\n  }\n\n  for (let x = 0; x < size; x++) {\n    boardArrayRow.push(boardArrayColumns);\n  }\n\n  console.log(boardArrayRow);\n\n  return boardArrayRow;\n};\n\n/**\n * Generate the markup of the sudoku puzzle\n * @param {Number} param0 Size - the size of the board.\n */\nconst Board = ({ size }) => {\n  let tableData = generateEmptyBoard();\n\n  const tableHTML = tableData.map((row, rowIndex) => {\n    const tableCells = row.map((cell, cellIndex) => {\n      let cellClass = \"cellNumber\";\n      if (cell === 0) {\n        cellClass += \" empty\";\n      }\n\n      return (\n        <td key={[rowIndex, cellIndex]}>\n          <span className={cellClass}>{cell}</span>\n        </td>\n      );\n    });\n\n    return <tr key={rowIndex}>{tableCells}</tr>;\n  });\n\n  return (\n    <div className=\"board\">\n      <table>\n        <tbody>{tableHTML}</tbody>\n      </table>\n    </div>\n  );\n};\n\nBoard.propTypes = {\n  size: PropTypes.number,\n};\n\nexport default Board;\n","/Users/alex/Documents/Web Projects/react-learning/sudoku/src/components/Board/Board.js",[],"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/utilities/boardUtils.js",[],"/Users/alex/Documents/Web Projects/react-learning/sudoku/src/components/Board/Cell.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":34},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation"]